import { OperationStatus } from './contracts/operation-status';
/**
 * Represents status of operation that must be displayed on UI inside {@link StatusTrackingService}.
 */
export class Operation {
    /**
     * @param status value for {@link status} property.
     * @param title value for {@link title} property.
     */
    constructor(status, title) {
        this.status = status;
        this.title = title;
    }
    /**
     * Returns class name from {@link Operation.settings} that corresponds to current {@link status} value.
     */
    get className() {
        switch (this.status) {
            case OperationStatus.Done:
                return Operation.settings.statusDoneClassName;
            case OperationStatus.Progress:
                return Operation.settings.statusProgressClassName;
            case OperationStatus.Fail:
                return Operation.settings.statusFailClassName;
            default:
                return '';
        }
    }
}
/**
 * Settings for names of css classes that are relevant to {@link status} value.
 * This settings is used by {@link className} property and changing of this settings affects every object of {@link Operation} type.
 */
// tslint:disable-next-line: typedef
Operation.settings = {
    /**
     * Name of css class that corresponds to {@link OperationStatus.Done}.
     */
    statusDoneClassName: 'status-done',
    /**
     * Name of css class that corresponds to {@link OperationStatus.Fail}.
     */
    statusFailClassName: 'status-fail',
    /**
     * Name of css class that corresponds to {@link OperationStatus.Progress}.
     */
    statusProgressClassName: 'status-progress'
};
//# sourceMappingURL=operation.js.map